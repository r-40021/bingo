/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/bootstrap/js/dist/base-component.js":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/base-component.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap base-component.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ./dom/data.js */ \"./node_modules/bootstrap/js/dist/dom/data.js\")) :\n  0;\n}(this, (function (Data) { 'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  var Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): base-component.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const VERSION = '5.0.0-beta3';\n\n  class BaseComponent {\n    constructor(element) {\n      element = typeof element === 'string' ? document.querySelector(element) : element;\n\n      if (!element) {\n        return;\n      }\n\n      this._element = element;\n      Data__default['default'].set(this._element, this.constructor.DATA_KEY, this);\n    }\n\n    dispose() {\n      Data__default['default'].remove(this._element, this.constructor.DATA_KEY);\n      this._element = null;\n    }\n    /** Static */\n\n\n    static getInstance(element) {\n      return Data__default['default'].get(element, this.DATA_KEY);\n    }\n\n    static get VERSION() {\n      return VERSION;\n    }\n\n  }\n\n  return BaseComponent;\n\n})));\n//# sourceMappingURL=base-component.js.map\n\n\n//# sourceURL=webpack://bingo/./node_modules/bootstrap/js/dist/base-component.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/button.js":
/*!**************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/button.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap button.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ./dom/data.js */ \"./node_modules/bootstrap/js/dist/dom/data.js\"), __webpack_require__(/*! ./dom/event-handler.js */ \"./node_modules/bootstrap/js/dist/dom/event-handler.js\"), __webpack_require__(/*! ./base-component.js */ \"./node_modules/bootstrap/js/dist/base-component.js\")) :\n  0;\n}(this, (function (Data, EventHandler, BaseComponent) { 'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  var Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);\n  var EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n  var BaseComponent__default = /*#__PURE__*/_interopDefaultLegacy(BaseComponent);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): util/index.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  const getjQuery = () => {\n    const {\n      jQuery\n    } = window;\n\n    if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n      return jQuery;\n    }\n\n    return null;\n  };\n\n  const onDOMContentLoaded = callback => {\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', callback);\n    } else {\n      callback();\n    }\n  };\n\n  const defineJQueryPlugin = (name, plugin) => {\n    onDOMContentLoaded(() => {\n      const $ = getjQuery();\n      /* istanbul ignore if */\n\n      if ($) {\n        const JQUERY_NO_CONFLICT = $.fn[name];\n        $.fn[name] = plugin.jQueryInterface;\n        $.fn[name].Constructor = plugin;\n\n        $.fn[name].noConflict = () => {\n          $.fn[name] = JQUERY_NO_CONFLICT;\n          return plugin.jQueryInterface;\n        };\n      }\n    });\n  };\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): button.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NAME = 'button';\n  const DATA_KEY = 'bs.button';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const DATA_API_KEY = '.data-api';\n  const CLASS_NAME_ACTIVE = 'active';\n  const SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"button\"]';\n  const EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Button extends BaseComponent__default['default'] {\n    // Getters\n    static get DATA_KEY() {\n      return DATA_KEY;\n    } // Public\n\n\n    toggle() {\n      // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n      this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE));\n    } // Static\n\n\n    static jQueryInterface(config) {\n      return this.each(function () {\n        let data = Data__default['default'].get(this, DATA_KEY);\n\n        if (!data) {\n          data = new Button(this);\n        }\n\n        if (config === 'toggle') {\n          data[config]();\n        }\n      });\n    }\n\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n\n  EventHandler__default['default'].on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, event => {\n    event.preventDefault();\n    const button = event.target.closest(SELECTOR_DATA_TOGGLE);\n    let data = Data__default['default'].get(button, DATA_KEY);\n\n    if (!data) {\n      data = new Button(button);\n    }\n\n    data.toggle();\n  });\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   * add .Button to jQuery only if jQuery is present\n   */\n\n  defineJQueryPlugin(NAME, Button);\n\n  return Button;\n\n})));\n//# sourceMappingURL=button.js.map\n\n\n//# sourceURL=webpack://bingo/./node_modules/bootstrap/js/dist/button.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/data.js":
/*!****************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/data.js ***!
  \****************************************************/
/***/ (function(module) {

eval("/*!\n  * Bootstrap data.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n}(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): dom/data.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n  const elementMap = new Map();\n  var data = {\n    set(element, key, instance) {\n      if (!elementMap.has(element)) {\n        elementMap.set(element, new Map());\n      }\n\n      const instanceMap = elementMap.get(element); // make it clear we only want one instance per element\n      // can be removed later when multiple key/instances are fine to be used\n\n      if (!instanceMap.has(key) && instanceMap.size !== 0) {\n        // eslint-disable-next-line no-console\n        console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);\n        return;\n      }\n\n      instanceMap.set(key, instance);\n    },\n\n    get(element, key) {\n      if (elementMap.has(element)) {\n        return elementMap.get(element).get(key) || null;\n      }\n\n      return null;\n    },\n\n    remove(element, key) {\n      if (!elementMap.has(element)) {\n        return;\n      }\n\n      const instanceMap = elementMap.get(element);\n      instanceMap.delete(key); // free up element references if there are no instances left for an element\n\n      if (instanceMap.size === 0) {\n        elementMap.delete(element);\n      }\n    }\n\n  };\n\n  return data;\n\n})));\n//# sourceMappingURL=data.js.map\n\n\n//# sourceURL=webpack://bingo/./node_modules/bootstrap/js/dist/dom/data.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/event-handler.js":
/*!*************************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/event-handler.js ***!
  \*************************************************************/
/***/ (function(module) {

eval("/*!\n  * Bootstrap event-handler.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n}(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): util/index.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  const getjQuery = () => {\n    const {\n      jQuery\n    } = window;\n\n    if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n      return jQuery;\n    }\n\n    return null;\n  };\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): dom/event-handler.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\n  const stripNameRegex = /\\..*/;\n  const stripUidRegex = /::\\d+$/;\n  const eventRegistry = {}; // Events storage\n\n  let uidEvent = 1;\n  const customEvents = {\n    mouseenter: 'mouseover',\n    mouseleave: 'mouseout'\n  };\n  const nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);\n  /**\n   * ------------------------------------------------------------------------\n   * Private methods\n   * ------------------------------------------------------------------------\n   */\n\n  function getUidEvent(element, uid) {\n    return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n  }\n\n  function getEvent(element) {\n    const uid = getUidEvent(element);\n    element.uidEvent = uid;\n    eventRegistry[uid] = eventRegistry[uid] || {};\n    return eventRegistry[uid];\n  }\n\n  function bootstrapHandler(element, fn) {\n    return function handler(event) {\n      event.delegateTarget = element;\n\n      if (handler.oneOff) {\n        EventHandler.off(element, event.type, fn);\n      }\n\n      return fn.apply(element, [event]);\n    };\n  }\n\n  function bootstrapDelegationHandler(element, selector, fn) {\n    return function handler(event) {\n      const domElements = element.querySelectorAll(selector);\n\n      for (let {\n        target\n      } = event; target && target !== this; target = target.parentNode) {\n        for (let i = domElements.length; i--;) {\n          if (domElements[i] === target) {\n            event.delegateTarget = target;\n\n            if (handler.oneOff) {\n              // eslint-disable-next-line unicorn/consistent-destructuring\n              EventHandler.off(element, event.type, fn);\n            }\n\n            return fn.apply(target, [event]);\n          }\n        }\n      } // To please ESLint\n\n\n      return null;\n    };\n  }\n\n  function findHandler(events, handler, delegationSelector = null) {\n    const uidEventList = Object.keys(events);\n\n    for (let i = 0, len = uidEventList.length; i < len; i++) {\n      const event = events[uidEventList[i]];\n\n      if (event.originalHandler === handler && event.delegationSelector === delegationSelector) {\n        return event;\n      }\n    }\n\n    return null;\n  }\n\n  function normalizeParams(originalTypeEvent, handler, delegationFn) {\n    const delegation = typeof handler === 'string';\n    const originalHandler = delegation ? delegationFn : handler; // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n\n    let typeEvent = originalTypeEvent.replace(stripNameRegex, '');\n    const custom = customEvents[typeEvent];\n\n    if (custom) {\n      typeEvent = custom;\n    }\n\n    const isNative = nativeEvents.has(typeEvent);\n\n    if (!isNative) {\n      typeEvent = originalTypeEvent;\n    }\n\n    return [delegation, originalHandler, typeEvent];\n  }\n\n  function addHandler(element, originalTypeEvent, handler, delegationFn, oneOff) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n\n    if (!handler) {\n      handler = delegationFn;\n      delegationFn = null;\n    }\n\n    const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);\n    const events = getEvent(element);\n    const handlers = events[typeEvent] || (events[typeEvent] = {});\n    const previousFn = findHandler(handlers, originalHandler, delegation ? handler : null);\n\n    if (previousFn) {\n      previousFn.oneOff = previousFn.oneOff && oneOff;\n      return;\n    }\n\n    const uid = getUidEvent(originalHandler, originalTypeEvent.replace(namespaceRegex, ''));\n    const fn = delegation ? bootstrapDelegationHandler(element, handler, delegationFn) : bootstrapHandler(element, handler);\n    fn.delegationSelector = delegation ? handler : null;\n    fn.originalHandler = originalHandler;\n    fn.oneOff = oneOff;\n    fn.uidEvent = uid;\n    handlers[uid] = fn;\n    element.addEventListener(typeEvent, fn, delegation);\n  }\n\n  function removeHandler(element, events, typeEvent, handler, delegationSelector) {\n    const fn = findHandler(events[typeEvent], handler, delegationSelector);\n\n    if (!fn) {\n      return;\n    }\n\n    element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n    delete events[typeEvent][fn.uidEvent];\n  }\n\n  function removeNamespacedHandlers(element, events, typeEvent, namespace) {\n    const storeElementEvent = events[typeEvent] || {};\n    Object.keys(storeElementEvent).forEach(handlerKey => {\n      if (handlerKey.includes(namespace)) {\n        const event = storeElementEvent[handlerKey];\n        removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);\n      }\n    });\n  }\n\n  const EventHandler = {\n    on(element, event, handler, delegationFn) {\n      addHandler(element, event, handler, delegationFn, false);\n    },\n\n    one(element, event, handler, delegationFn) {\n      addHandler(element, event, handler, delegationFn, true);\n    },\n\n    off(element, originalTypeEvent, handler, delegationFn) {\n      if (typeof originalTypeEvent !== 'string' || !element) {\n        return;\n      }\n\n      const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);\n      const inNamespace = typeEvent !== originalTypeEvent;\n      const events = getEvent(element);\n      const isNamespace = originalTypeEvent.startsWith('.');\n\n      if (typeof originalHandler !== 'undefined') {\n        // Simplest case: handler is passed, remove that listener ONLY.\n        if (!events || !events[typeEvent]) {\n          return;\n        }\n\n        removeHandler(element, events, typeEvent, originalHandler, delegation ? handler : null);\n        return;\n      }\n\n      if (isNamespace) {\n        Object.keys(events).forEach(elementEvent => {\n          removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n        });\n      }\n\n      const storeElementEvent = events[typeEvent] || {};\n      Object.keys(storeElementEvent).forEach(keyHandlers => {\n        const handlerKey = keyHandlers.replace(stripUidRegex, '');\n\n        if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n          const event = storeElementEvent[keyHandlers];\n          removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);\n        }\n      });\n    },\n\n    trigger(element, event, args) {\n      if (typeof event !== 'string' || !element) {\n        return null;\n      }\n\n      const $ = getjQuery();\n      const typeEvent = event.replace(stripNameRegex, '');\n      const inNamespace = event !== typeEvent;\n      const isNative = nativeEvents.has(typeEvent);\n      let jQueryEvent;\n      let bubbles = true;\n      let nativeDispatch = true;\n      let defaultPrevented = false;\n      let evt = null;\n\n      if (inNamespace && $) {\n        jQueryEvent = $.Event(event, args);\n        $(element).trigger(jQueryEvent);\n        bubbles = !jQueryEvent.isPropagationStopped();\n        nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n        defaultPrevented = jQueryEvent.isDefaultPrevented();\n      }\n\n      if (isNative) {\n        evt = document.createEvent('HTMLEvents');\n        evt.initEvent(typeEvent, bubbles, true);\n      } else {\n        evt = new CustomEvent(event, {\n          bubbles,\n          cancelable: true\n        });\n      } // merge custom information in our event\n\n\n      if (typeof args !== 'undefined') {\n        Object.keys(args).forEach(key => {\n          Object.defineProperty(evt, key, {\n            get() {\n              return args[key];\n            }\n\n          });\n        });\n      }\n\n      if (defaultPrevented) {\n        evt.preventDefault();\n      }\n\n      if (nativeDispatch) {\n        element.dispatchEvent(evt);\n      }\n\n      if (evt.defaultPrevented && typeof jQueryEvent !== 'undefined') {\n        jQueryEvent.preventDefault();\n      }\n\n      return evt;\n    }\n\n  };\n\n  return EventHandler;\n\n})));\n//# sourceMappingURL=event-handler.js.map\n\n\n//# sourceURL=webpack://bingo/./node_modules/bootstrap/js/dist/dom/event-handler.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/manipulator.js":
/*!***********************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/manipulator.js ***!
  \***********************************************************/
/***/ (function(module) {

eval("/*!\n  * Bootstrap manipulator.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n}(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): dom/manipulator.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  function normalizeData(val) {\n    if (val === 'true') {\n      return true;\n    }\n\n    if (val === 'false') {\n      return false;\n    }\n\n    if (val === Number(val).toString()) {\n      return Number(val);\n    }\n\n    if (val === '' || val === 'null') {\n      return null;\n    }\n\n    return val;\n  }\n\n  function normalizeDataKey(key) {\n    return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`);\n  }\n\n  const Manipulator = {\n    setDataAttribute(element, key, value) {\n      element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);\n    },\n\n    removeDataAttribute(element, key) {\n      element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);\n    },\n\n    getDataAttributes(element) {\n      if (!element) {\n        return {};\n      }\n\n      const attributes = {};\n      Object.keys(element.dataset).filter(key => key.startsWith('bs')).forEach(key => {\n        let pureKey = key.replace(/^bs/, '');\n        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);\n        attributes[pureKey] = normalizeData(element.dataset[key]);\n      });\n      return attributes;\n    },\n\n    getDataAttribute(element, key) {\n      return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));\n    },\n\n    offset(element) {\n      const rect = element.getBoundingClientRect();\n      return {\n        top: rect.top + document.body.scrollTop,\n        left: rect.left + document.body.scrollLeft\n      };\n    },\n\n    position(element) {\n      return {\n        top: element.offsetTop,\n        left: element.offsetLeft\n      };\n    }\n\n  };\n\n  return Manipulator;\n\n})));\n//# sourceMappingURL=manipulator.js.map\n\n\n//# sourceURL=webpack://bingo/./node_modules/bootstrap/js/dist/dom/manipulator.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/selector-engine.js":
/*!***************************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/selector-engine.js ***!
  \***************************************************************/
/***/ (function(module) {

eval("/*!\n  * Bootstrap selector-engine.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n}(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): dom/selector-engine.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n  const NODE_TEXT = 3;\n  const SelectorEngine = {\n    find(selector, element = document.documentElement) {\n      return [].concat(...Element.prototype.querySelectorAll.call(element, selector));\n    },\n\n    findOne(selector, element = document.documentElement) {\n      return Element.prototype.querySelector.call(element, selector);\n    },\n\n    children(element, selector) {\n      return [].concat(...element.children).filter(child => child.matches(selector));\n    },\n\n    parents(element, selector) {\n      const parents = [];\n      let ancestor = element.parentNode;\n\n      while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n        if (ancestor.matches(selector)) {\n          parents.push(ancestor);\n        }\n\n        ancestor = ancestor.parentNode;\n      }\n\n      return parents;\n    },\n\n    prev(element, selector) {\n      let previous = element.previousElementSibling;\n\n      while (previous) {\n        if (previous.matches(selector)) {\n          return [previous];\n        }\n\n        previous = previous.previousElementSibling;\n      }\n\n      return [];\n    },\n\n    next(element, selector) {\n      let next = element.nextElementSibling;\n\n      while (next) {\n        if (next.matches(selector)) {\n          return [next];\n        }\n\n        next = next.nextElementSibling;\n      }\n\n      return [];\n    }\n\n  };\n\n  return SelectorEngine;\n\n})));\n//# sourceMappingURL=selector-engine.js.map\n\n\n//# sourceURL=webpack://bingo/./node_modules/bootstrap/js/dist/dom/selector-engine.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/modal.js":
/*!*************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/modal.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap modal.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ./dom/data.js */ \"./node_modules/bootstrap/js/dist/dom/data.js\"), __webpack_require__(/*! ./dom/event-handler.js */ \"./node_modules/bootstrap/js/dist/dom/event-handler.js\"), __webpack_require__(/*! ./dom/manipulator.js */ \"./node_modules/bootstrap/js/dist/dom/manipulator.js\"), __webpack_require__(/*! ./dom/selector-engine.js */ \"./node_modules/bootstrap/js/dist/dom/selector-engine.js\"), __webpack_require__(/*! ./base-component.js */ \"./node_modules/bootstrap/js/dist/base-component.js\")) :\n  0;\n}(this, (function (Data, EventHandler, Manipulator, SelectorEngine, BaseComponent) { 'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  var Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);\n  var EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n  var Manipulator__default = /*#__PURE__*/_interopDefaultLegacy(Manipulator);\n  var SelectorEngine__default = /*#__PURE__*/_interopDefaultLegacy(SelectorEngine);\n  var BaseComponent__default = /*#__PURE__*/_interopDefaultLegacy(BaseComponent);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): util/index.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  const MILLISECONDS_MULTIPLIER = 1000;\n  const TRANSITION_END = 'transitionend'; // Shoutout AngusCroll (https://goo.gl/pxwQGp)\n\n  const toType = obj => {\n    if (obj === null || obj === undefined) {\n      return `${obj}`;\n    }\n\n    return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase();\n  };\n\n  const getSelector = element => {\n    let selector = element.getAttribute('data-bs-target');\n\n    if (!selector || selector === '#') {\n      let hrefAttr = element.getAttribute('href'); // The only valid content that could double as a selector are IDs or classes,\n      // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n      // `document.querySelector` will rightfully complain it is invalid.\n      // See https://github.com/twbs/bootstrap/issues/32273\n\n      if (!hrefAttr || !hrefAttr.includes('#') && !hrefAttr.startsWith('.')) {\n        return null;\n      } // Just in case some CMS puts out a full URL with the anchor appended\n\n\n      if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {\n        hrefAttr = '#' + hrefAttr.split('#')[1];\n      }\n\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null;\n    }\n\n    return selector;\n  };\n\n  const getElementFromSelector = element => {\n    const selector = getSelector(element);\n    return selector ? document.querySelector(selector) : null;\n  };\n\n  const getTransitionDurationFromElement = element => {\n    if (!element) {\n      return 0;\n    } // Get transition-duration of the element\n\n\n    let {\n      transitionDuration,\n      transitionDelay\n    } = window.getComputedStyle(element);\n    const floatTransitionDuration = Number.parseFloat(transitionDuration);\n    const floatTransitionDelay = Number.parseFloat(transitionDelay); // Return 0 if element or transition duration is not found\n\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0;\n    } // If multiple durations are defined, take the first\n\n\n    transitionDuration = transitionDuration.split(',')[0];\n    transitionDelay = transitionDelay.split(',')[0];\n    return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n  };\n\n  const triggerTransitionEnd = element => {\n    element.dispatchEvent(new Event(TRANSITION_END));\n  };\n\n  const isElement = obj => (obj[0] || obj).nodeType;\n\n  const emulateTransitionEnd = (element, duration) => {\n    let called = false;\n    const durationPadding = 5;\n    const emulatedDuration = duration + durationPadding;\n\n    function listener() {\n      called = true;\n      element.removeEventListener(TRANSITION_END, listener);\n    }\n\n    element.addEventListener(TRANSITION_END, listener);\n    setTimeout(() => {\n      if (!called) {\n        triggerTransitionEnd(element);\n      }\n    }, emulatedDuration);\n  };\n\n  const typeCheckConfig = (componentName, config, configTypes) => {\n    Object.keys(configTypes).forEach(property => {\n      const expectedTypes = configTypes[property];\n      const value = config[property];\n      const valueType = value && isElement(value) ? 'element' : toType(value);\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(`${componentName.toUpperCase()}: ` + `Option \"${property}\" provided type \"${valueType}\" ` + `but expected type \"${expectedTypes}\".`);\n      }\n    });\n  };\n\n  const isVisible = element => {\n    if (!element) {\n      return false;\n    }\n\n    if (element.style && element.parentNode && element.parentNode.style) {\n      const elementStyle = getComputedStyle(element);\n      const parentNodeStyle = getComputedStyle(element.parentNode);\n      return elementStyle.display !== 'none' && parentNodeStyle.display !== 'none' && elementStyle.visibility !== 'hidden';\n    }\n\n    return false;\n  };\n\n  const reflow = element => element.offsetHeight;\n\n  const getjQuery = () => {\n    const {\n      jQuery\n    } = window;\n\n    if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n      return jQuery;\n    }\n\n    return null;\n  };\n\n  const onDOMContentLoaded = callback => {\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', callback);\n    } else {\n      callback();\n    }\n  };\n\n  const isRTL = () => document.documentElement.dir === 'rtl';\n\n  const defineJQueryPlugin = (name, plugin) => {\n    onDOMContentLoaded(() => {\n      const $ = getjQuery();\n      /* istanbul ignore if */\n\n      if ($) {\n        const JQUERY_NO_CONFLICT = $.fn[name];\n        $.fn[name] = plugin.jQueryInterface;\n        $.fn[name].Constructor = plugin;\n\n        $.fn[name].noConflict = () => {\n          $.fn[name] = JQUERY_NO_CONFLICT;\n          return plugin.jQueryInterface;\n        };\n      }\n    });\n  };\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): modal.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NAME = 'modal';\n  const DATA_KEY = 'bs.modal';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const DATA_API_KEY = '.data-api';\n  const ESCAPE_KEY = 'Escape';\n  const Default = {\n    backdrop: true,\n    keyboard: true,\n    focus: true\n  };\n  const DefaultType = {\n    backdrop: '(boolean|string)',\n    keyboard: 'boolean',\n    focus: 'boolean'\n  };\n  const EVENT_HIDE = `hide${EVENT_KEY}`;\n  const EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`;\n  const EVENT_HIDDEN = `hidden${EVENT_KEY}`;\n  const EVENT_SHOW = `show${EVENT_KEY}`;\n  const EVENT_SHOWN = `shown${EVENT_KEY}`;\n  const EVENT_FOCUSIN = `focusin${EVENT_KEY}`;\n  const EVENT_RESIZE = `resize${EVENT_KEY}`;\n  const EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`;\n  const EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`;\n  const EVENT_MOUSEUP_DISMISS = `mouseup.dismiss${EVENT_KEY}`;\n  const EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`;\n  const EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\n  const CLASS_NAME_SCROLLBAR_MEASURER = 'modal-scrollbar-measure';\n  const CLASS_NAME_BACKDROP = 'modal-backdrop';\n  const CLASS_NAME_OPEN = 'modal-open';\n  const CLASS_NAME_FADE = 'fade';\n  const CLASS_NAME_SHOW = 'show';\n  const CLASS_NAME_STATIC = 'modal-static';\n  const SELECTOR_DIALOG = '.modal-dialog';\n  const SELECTOR_MODAL_BODY = '.modal-body';\n  const SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]';\n  const SELECTOR_DATA_DISMISS = '[data-bs-dismiss=\"modal\"]';\n  const SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\n  const SELECTOR_STICKY_CONTENT = '.sticky-top';\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Modal extends BaseComponent__default['default'] {\n    constructor(element, config) {\n      super(element);\n      this._config = this._getConfig(config);\n      this._dialog = SelectorEngine__default['default'].findOne(SELECTOR_DIALOG, this._element);\n      this._backdrop = null;\n      this._isShown = false;\n      this._isBodyOverflowing = false;\n      this._ignoreBackdropClick = false;\n      this._isTransitioning = false;\n      this._scrollbarWidth = 0;\n    } // Getters\n\n\n    static get Default() {\n      return Default;\n    }\n\n    static get DATA_KEY() {\n      return DATA_KEY;\n    } // Public\n\n\n    toggle(relatedTarget) {\n      return this._isShown ? this.hide() : this.show(relatedTarget);\n    }\n\n    show(relatedTarget) {\n      if (this._isShown || this._isTransitioning) {\n        return;\n      }\n\n      if (this._isAnimated()) {\n        this._isTransitioning = true;\n      }\n\n      const showEvent = EventHandler__default['default'].trigger(this._element, EVENT_SHOW, {\n        relatedTarget\n      });\n\n      if (this._isShown || showEvent.defaultPrevented) {\n        return;\n      }\n\n      this._isShown = true;\n\n      this._checkScrollbar();\n\n      this._setScrollbar();\n\n      this._adjustDialog();\n\n      this._setEscapeEvent();\n\n      this._setResizeEvent();\n\n      EventHandler__default['default'].on(this._element, EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, event => this.hide(event));\n      EventHandler__default['default'].on(this._dialog, EVENT_MOUSEDOWN_DISMISS, () => {\n        EventHandler__default['default'].one(this._element, EVENT_MOUSEUP_DISMISS, event => {\n          if (event.target === this._element) {\n            this._ignoreBackdropClick = true;\n          }\n        });\n      });\n\n      this._showBackdrop(() => this._showElement(relatedTarget));\n    }\n\n    hide(event) {\n      if (event) {\n        event.preventDefault();\n      }\n\n      if (!this._isShown || this._isTransitioning) {\n        return;\n      }\n\n      const hideEvent = EventHandler__default['default'].trigger(this._element, EVENT_HIDE);\n\n      if (hideEvent.defaultPrevented) {\n        return;\n      }\n\n      this._isShown = false;\n\n      const isAnimated = this._isAnimated();\n\n      if (isAnimated) {\n        this._isTransitioning = true;\n      }\n\n      this._setEscapeEvent();\n\n      this._setResizeEvent();\n\n      EventHandler__default['default'].off(document, EVENT_FOCUSIN);\n\n      this._element.classList.remove(CLASS_NAME_SHOW);\n\n      EventHandler__default['default'].off(this._element, EVENT_CLICK_DISMISS);\n      EventHandler__default['default'].off(this._dialog, EVENT_MOUSEDOWN_DISMISS);\n\n      if (isAnimated) {\n        const transitionDuration = getTransitionDurationFromElement(this._element);\n        EventHandler__default['default'].one(this._element, 'transitionend', event => this._hideModal(event));\n        emulateTransitionEnd(this._element, transitionDuration);\n      } else {\n        this._hideModal();\n      }\n    }\n\n    dispose() {\n      [window, this._element, this._dialog].forEach(htmlElement => EventHandler__default['default'].off(htmlElement, EVENT_KEY));\n      super.dispose();\n      /**\n       * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`\n       * Do not move `document` in `htmlElements` array\n       * It will remove `EVENT_CLICK_DATA_API` event that should remain\n       */\n\n      EventHandler__default['default'].off(document, EVENT_FOCUSIN);\n      this._config = null;\n      this._dialog = null;\n      this._backdrop = null;\n      this._isShown = null;\n      this._isBodyOverflowing = null;\n      this._ignoreBackdropClick = null;\n      this._isTransitioning = null;\n      this._scrollbarWidth = null;\n    }\n\n    handleUpdate() {\n      this._adjustDialog();\n    } // Private\n\n\n    _getConfig(config) {\n      config = { ...Default,\n        ...config\n      };\n      typeCheckConfig(NAME, config, DefaultType);\n      return config;\n    }\n\n    _showElement(relatedTarget) {\n      const isAnimated = this._isAnimated();\n\n      const modalBody = SelectorEngine__default['default'].findOne(SELECTOR_MODAL_BODY, this._dialog);\n\n      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n        // Don't move modal's DOM position\n        document.body.appendChild(this._element);\n      }\n\n      this._element.style.display = 'block';\n\n      this._element.removeAttribute('aria-hidden');\n\n      this._element.setAttribute('aria-modal', true);\n\n      this._element.setAttribute('role', 'dialog');\n\n      this._element.scrollTop = 0;\n\n      if (modalBody) {\n        modalBody.scrollTop = 0;\n      }\n\n      if (isAnimated) {\n        reflow(this._element);\n      }\n\n      this._element.classList.add(CLASS_NAME_SHOW);\n\n      if (this._config.focus) {\n        this._enforceFocus();\n      }\n\n      const transitionComplete = () => {\n        if (this._config.focus) {\n          this._element.focus();\n        }\n\n        this._isTransitioning = false;\n        EventHandler__default['default'].trigger(this._element, EVENT_SHOWN, {\n          relatedTarget\n        });\n      };\n\n      if (isAnimated) {\n        const transitionDuration = getTransitionDurationFromElement(this._dialog);\n        EventHandler__default['default'].one(this._dialog, 'transitionend', transitionComplete);\n        emulateTransitionEnd(this._dialog, transitionDuration);\n      } else {\n        transitionComplete();\n      }\n    }\n\n    _enforceFocus() {\n      EventHandler__default['default'].off(document, EVENT_FOCUSIN); // guard against infinite focus loop\n\n      EventHandler__default['default'].on(document, EVENT_FOCUSIN, event => {\n        if (document !== event.target && this._element !== event.target && !this._element.contains(event.target)) {\n          this._element.focus();\n        }\n      });\n    }\n\n    _setEscapeEvent() {\n      if (this._isShown) {\n        EventHandler__default['default'].on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n          if (this._config.keyboard && event.key === ESCAPE_KEY) {\n            event.preventDefault();\n            this.hide();\n          } else if (!this._config.keyboard && event.key === ESCAPE_KEY) {\n            this._triggerBackdropTransition();\n          }\n        });\n      } else {\n        EventHandler__default['default'].off(this._element, EVENT_KEYDOWN_DISMISS);\n      }\n    }\n\n    _setResizeEvent() {\n      if (this._isShown) {\n        EventHandler__default['default'].on(window, EVENT_RESIZE, () => this._adjustDialog());\n      } else {\n        EventHandler__default['default'].off(window, EVENT_RESIZE);\n      }\n    }\n\n    _hideModal() {\n      this._element.style.display = 'none';\n\n      this._element.setAttribute('aria-hidden', true);\n\n      this._element.removeAttribute('aria-modal');\n\n      this._element.removeAttribute('role');\n\n      this._isTransitioning = false;\n\n      this._showBackdrop(() => {\n        document.body.classList.remove(CLASS_NAME_OPEN);\n\n        this._resetAdjustments();\n\n        this._resetScrollbar();\n\n        EventHandler__default['default'].trigger(this._element, EVENT_HIDDEN);\n      });\n    }\n\n    _removeBackdrop() {\n      this._backdrop.parentNode.removeChild(this._backdrop);\n\n      this._backdrop = null;\n    }\n\n    _showBackdrop(callback) {\n      const isAnimated = this._isAnimated();\n\n      if (this._isShown && this._config.backdrop) {\n        this._backdrop = document.createElement('div');\n        this._backdrop.className = CLASS_NAME_BACKDROP;\n\n        if (isAnimated) {\n          this._backdrop.classList.add(CLASS_NAME_FADE);\n        }\n\n        document.body.appendChild(this._backdrop);\n        EventHandler__default['default'].on(this._element, EVENT_CLICK_DISMISS, event => {\n          if (this._ignoreBackdropClick) {\n            this._ignoreBackdropClick = false;\n            return;\n          }\n\n          if (event.target !== event.currentTarget) {\n            return;\n          }\n\n          if (this._config.backdrop === 'static') {\n            this._triggerBackdropTransition();\n          } else {\n            this.hide();\n          }\n        });\n\n        if (isAnimated) {\n          reflow(this._backdrop);\n        }\n\n        this._backdrop.classList.add(CLASS_NAME_SHOW);\n\n        if (!isAnimated) {\n          callback();\n          return;\n        }\n\n        const backdropTransitionDuration = getTransitionDurationFromElement(this._backdrop);\n        EventHandler__default['default'].one(this._backdrop, 'transitionend', callback);\n        emulateTransitionEnd(this._backdrop, backdropTransitionDuration);\n      } else if (!this._isShown && this._backdrop) {\n        this._backdrop.classList.remove(CLASS_NAME_SHOW);\n\n        const callbackRemove = () => {\n          this._removeBackdrop();\n\n          callback();\n        };\n\n        if (isAnimated) {\n          const backdropTransitionDuration = getTransitionDurationFromElement(this._backdrop);\n          EventHandler__default['default'].one(this._backdrop, 'transitionend', callbackRemove);\n          emulateTransitionEnd(this._backdrop, backdropTransitionDuration);\n        } else {\n          callbackRemove();\n        }\n      } else {\n        callback();\n      }\n    }\n\n    _isAnimated() {\n      return this._element.classList.contains(CLASS_NAME_FADE);\n    }\n\n    _triggerBackdropTransition() {\n      const hideEvent = EventHandler__default['default'].trigger(this._element, EVENT_HIDE_PREVENTED);\n\n      if (hideEvent.defaultPrevented) {\n        return;\n      }\n\n      const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n\n      if (!isModalOverflowing) {\n        this._element.style.overflowY = 'hidden';\n      }\n\n      this._element.classList.add(CLASS_NAME_STATIC);\n\n      const modalTransitionDuration = getTransitionDurationFromElement(this._dialog);\n      EventHandler__default['default'].off(this._element, 'transitionend');\n      EventHandler__default['default'].one(this._element, 'transitionend', () => {\n        this._element.classList.remove(CLASS_NAME_STATIC);\n\n        if (!isModalOverflowing) {\n          EventHandler__default['default'].one(this._element, 'transitionend', () => {\n            this._element.style.overflowY = '';\n          });\n          emulateTransitionEnd(this._element, modalTransitionDuration);\n        }\n      });\n      emulateTransitionEnd(this._element, modalTransitionDuration);\n\n      this._element.focus();\n    } // ----------------------------------------------------------------------\n    // the following methods are used to handle overflowing modals\n    // ----------------------------------------------------------------------\n\n\n    _adjustDialog() {\n      const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n\n      if (!this._isBodyOverflowing && isModalOverflowing && !isRTL() || this._isBodyOverflowing && !isModalOverflowing && isRTL()) {\n        this._element.style.paddingLeft = `${this._scrollbarWidth}px`;\n      }\n\n      if (this._isBodyOverflowing && !isModalOverflowing && !isRTL() || !this._isBodyOverflowing && isModalOverflowing && isRTL()) {\n        this._element.style.paddingRight = `${this._scrollbarWidth}px`;\n      }\n    }\n\n    _resetAdjustments() {\n      this._element.style.paddingLeft = '';\n      this._element.style.paddingRight = '';\n    }\n\n    _checkScrollbar() {\n      const rect = document.body.getBoundingClientRect();\n      this._isBodyOverflowing = Math.round(rect.left + rect.right) < window.innerWidth;\n      this._scrollbarWidth = this._getScrollbarWidth();\n    }\n\n    _setScrollbar() {\n      if (this._isBodyOverflowing) {\n        this._setElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight', calculatedValue => calculatedValue + this._scrollbarWidth);\n\n        this._setElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight', calculatedValue => calculatedValue - this._scrollbarWidth);\n\n        this._setElementAttributes('body', 'paddingRight', calculatedValue => calculatedValue + this._scrollbarWidth);\n      }\n\n      document.body.classList.add(CLASS_NAME_OPEN);\n    }\n\n    _setElementAttributes(selector, styleProp, callback) {\n      SelectorEngine__default['default'].find(selector).forEach(element => {\n        if (element !== document.body && window.innerWidth > element.clientWidth + this._scrollbarWidth) {\n          return;\n        }\n\n        const actualValue = element.style[styleProp];\n        const calculatedValue = window.getComputedStyle(element)[styleProp];\n        Manipulator__default['default'].setDataAttribute(element, styleProp, actualValue);\n        element.style[styleProp] = callback(Number.parseFloat(calculatedValue)) + 'px';\n      });\n    }\n\n    _resetScrollbar() {\n      this._resetElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight');\n\n      this._resetElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight');\n\n      this._resetElementAttributes('body', 'paddingRight');\n    }\n\n    _resetElementAttributes(selector, styleProp) {\n      SelectorEngine__default['default'].find(selector).forEach(element => {\n        const value = Manipulator__default['default'].getDataAttribute(element, styleProp);\n\n        if (typeof value === 'undefined' && element === document.body) {\n          element.style[styleProp] = '';\n        } else {\n          Manipulator__default['default'].removeDataAttribute(element, styleProp);\n          element.style[styleProp] = value;\n        }\n      });\n    }\n\n    _getScrollbarWidth() {\n      // thx d.walsh\n      const scrollDiv = document.createElement('div');\n      scrollDiv.className = CLASS_NAME_SCROLLBAR_MEASURER;\n      document.body.appendChild(scrollDiv);\n      const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n      return scrollbarWidth;\n    } // Static\n\n\n    static jQueryInterface(config, relatedTarget) {\n      return this.each(function () {\n        let data = Data__default['default'].get(this, DATA_KEY);\n        const _config = { ...Default,\n          ...Manipulator__default['default'].getDataAttributes(this),\n          ...(typeof config === 'object' && config ? config : {})\n        };\n\n        if (!data) {\n          data = new Modal(this, _config);\n        }\n\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(`No method named \"${config}\"`);\n          }\n\n          data[config](relatedTarget);\n        }\n      });\n    }\n\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n\n  EventHandler__default['default'].on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n    const target = getElementFromSelector(this);\n\n    if (this.tagName === 'A' || this.tagName === 'AREA') {\n      event.preventDefault();\n    }\n\n    EventHandler__default['default'].one(target, EVENT_SHOW, showEvent => {\n      if (showEvent.defaultPrevented) {\n        // only register focus restorer if modal will actually get shown\n        return;\n      }\n\n      EventHandler__default['default'].one(target, EVENT_HIDDEN, () => {\n        if (isVisible(this)) {\n          this.focus();\n        }\n      });\n    });\n    let data = Data__default['default'].get(target, DATA_KEY);\n\n    if (!data) {\n      const config = { ...Manipulator__default['default'].getDataAttributes(target),\n        ...Manipulator__default['default'].getDataAttributes(this)\n      };\n      data = new Modal(target, config);\n    }\n\n    data.toggle(this);\n  });\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   * add .Modal to jQuery only if jQuery is present\n   */\n\n  defineJQueryPlugin(NAME, Modal);\n\n  return Modal;\n\n})));\n//# sourceMappingURL=modal.js.map\n\n\n//# sourceURL=webpack://bingo/./node_modules/bootstrap/js/dist/modal.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_bootstrap_js_dist_button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/bootstrap/js/dist/button */ \"./node_modules/bootstrap/js/dist/button.js\");\n/* harmony import */ var _node_modules_bootstrap_js_dist_button__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_bootstrap_js_dist_button__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_bootstrap_js_dist_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/bootstrap/js/dist/modal */ \"./node_modules/bootstrap/js/dist/modal.js\");\n/* harmony import */ var _node_modules_bootstrap_js_dist_modal__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_bootstrap_js_dist_modal__WEBPACK_IMPORTED_MODULE_1__);\n/*Bootstrap*/\n//import '../../node_modules/bootstrap/js/dist/alert';\n\n//import '../../node_modules/bootstrap/js/dist/carousel';\n//import '../../node_modules/bootstrap/js/dist/collapse';\n//import '../../node_modules/bootstrap/js/dist/dropdown';\n\n//import '../../node_modules/bootstrap/js/dist/popover';\n//import '../../node_modules/bootstrap/js/dist/scrollspy';\n//import '../../node_modules/bootstrap/js/dist/tab';\n//import '../../node_modules/bootstrap/js/dist/toast';\n//import '../../node_modules/bootstrap/js/dist/tooltip';\n/*変数の定義*/\nvar max = 75; //最大値\nvar myHistory = []; //履歴\nvar select = []; //ビンゴの数字候補\nvar colorList = [\"#ffa500\", \"#d3e15c\", \"#b384c7\", \"#F06060\", \"#a9ceec\"]; //数字表示エリアの枠線色\nvar old = new Object(); //Undoボタン用のオブジェクト\nold.max = []; //過去の最大値を記録（キャッシュしない）\nold.number = []; //過去に出た数字を記録（キャッシュしない）\nold.color = []; //過去の枠線色を記録（キャッシュしない）\nlet anime; //テーマ変更時のアニメーション(timeout)\nlet themeStatus; //テーマがユーザー設定(1)なのか否か(0)\n/*Dark Theme*/\nconst isDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\nvar loadingTimeout;\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  loadingTimeout = setTimeout(() => {\n    // 10秒後ローディング強制解除\n    document.getElementById(\"fixed\").classList.add(\"loaded\");\n    document.getElementById(\"loading\").classList.add(\"loaded\");\n  }, 10000);\n});\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // ローディング解除\n  window.addEventListener(\"load\", () => {\n    clearTimeout(loadingTimeout);\n    document.getElementById(\"fixed\").classList.add(\"loaded\");\n    document.getElementById(\"loading\").classList.add(\"loaded\");\n  });\n});\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  if (storageAvailable(\"localStorage\")) {\n  } else {\n    alert(\"お使いの環境では、保存機能はご利用になれません。\"); //Localstorageが利用不可のとき\n  }\n  if (window.navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1) {\n    /*Androidのときに「共有」アイコンを変化*/\n    var elements = document.getElementsByClassName(\"shareIcon\");\n    for (let i = 0; i < elements.length; i++) {\n      elements[i].classList.replace(\"bi-box-arrow-up\", \"bi-share\");\n    }\n  }\n  flex();\n  resize(); //レイアウト調整処理\n  //読み込み\n  if (localStorage.getItem(\"theme\") === \"dark\") {\n    // ローカルストレージを読み込み、テーマを反映\n    toggleTheme(\"d\");\n  } else if (localStorage.getItem(\"theme\") === \"light\") {\n    toggleTheme(\"l\");\n  } else if (localStorage.getItem(\"theme\") === \"auto\") {\n    toggleTheme(\"a\");\n  } else {\n    toggleTheme(isDark);\n  }\n  if (localStorage.getItem(\"myHistory\")) {\n    /*履歴読み込み*/\n    if (JSON.parse(localStorage.getItem(\"myHistory\")).length >= 1) {\n      var his = localStorage.getItem(\"myHistory\");\n      myHistory = JSON.parse(his);\n      var historyBody = document.getElementById(\"history-body\");\n      for (let i = 0; i < myHistory.length; i++) {\n        var div = document.createElement(\"div\"); //HTMLに代入　それぞれにdiv要素を作成している\n        div.className = \"history-number\";\n        div.innerHTML = myHistory[i];\n        historyBody.appendChild(div);\n      }\n      document.getElementById(\"number-inner\").innerHTML =\n        myHistory[myHistory.length - 1];\n      old.number.unshift(Number(myHistory[myHistory.length - 1]));\n      historyBody.scroll(\n        0,\n        historyBody.scrollHeight - historyBody.clientHeight //履歴表示エリアを一番下までスクロール\n      );\n    }\n  }\n  if (localStorage.getItem(\"max\")) {\n    /*最大値取得*/\n    max = Number(localStorage.getItem(\"max\"));\n    document.getElementById(\"bingoMax\").value = max;\n    document.getElementById(\"bingoMaxText\").value = max;\n    old.max.unshift(Number(max));\n  }\n  if (localStorage.getItem(\"lastColor\")) {\n    /*最後の色を取得*/\n    document.getElementById(\"bingoNumber\").style.borderColor =\n      colorList[Number(localStorage.getItem(\"lastColor\"))];\n    old.color.unshift(Number(localStorage.getItem(\"lastColor\")));\n  }\n  addSelect();\n  getHistoryLength();\n  removeDisableSet(); //フッターを選択可能に\n});\nwindow.addEventListener(\"resize\", function () {\n  flex();\n  resize(); //レイアウト調整\n});\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  //レンジとテキストボックスを連動\n  var range = document.getElementById(\"bingoMax\");\n  var rangeText = document.getElementById(\"bingoMaxText\");\n  range.addEventListener(\"input\", function () {\n    rangeText.value = range.value;\n    max = Number(range.value);\n    old.max[0] = max;\n    addSelect();\n  });\n  rangeText.addEventListener(\"input\", function () {\n    range.value = rangeText.value;\n    max = Number(range.value);\n    old.max[0] = max;\n    addSelect();\n  });\n  rangeText.addEventListener(\"change\", function () {\n    /*1~99以外の数字が入力されたときの処理*/\n    if (rangeText.value < 1) {\n      rangeText.value = 1; //1未満なら1にする\n    }\n    if (rangeText.value > 99) {\n      rangeText.value = 99; //99より大きれば99にする\n    }\n    range.value = rangeText.value;\n    max = Number(range.value);\n    old.max[0] = max;\n    addSelect(); //ビンゴの候補のリストを更新\n  });\n});\nconst spin = () => {\n  //シャッフル\n  if (select.length <= 0) {\n    var endModal = new bootstrap.Modal(document.getElementById(\"end-modal\"));\n    endModal.show();\n  } else {\n    makeDisableSet();\n    var undoElement = document.getElementById(\"undo\");\n    undoElement.style.visibility = \"hidden\";\n    document.getElementById(\"startOver\").style.visibility = \"hidden\";\n    var count = 0;\n    var numberElement = document.getElementById(\"bingoNumber\");\n    if (select.length === 1) {\n      var stop = 5;\n    } else {\n      var stop = Math.floor(Math.random() * (12 - 5) + 5);\n    }\n    var historyBody = document.getElementById(\"history-body\");\n    var spin = setInterval(() => {\n      var index = Math.floor(Math.random() * select.length);\n      var display = select[index];\n      document.getElementById(\"number-inner\").innerHTML = display;\n      var colorIndex = count % colorList.length;\n      numberElement.style.borderColor = colorList[colorIndex];\n      count++;\n      if (count >= stop) {\n        /*5~12の乱数回実行したら停止*/\n        clearInterval(spin);\n        var div = document.createElement(\"div\");\n        div.className = \"history-number\";\n        div.innerHTML = display;\n        myHistory.push(display);\n        localStorage.setItem(\"myHistory\", JSON.stringify(myHistory));\n        localStorage.setItem(\"lastColor\", colorIndex); //LocalStorageに保存\n        select.splice(select.indexOf(display), 1); //ビンゴ候補のリストから該当する数字を削除\n        historyBody.appendChild(div);\n        old.max.unshift(Number(max));\n        old.number.unshift(Number(display));\n        old.color.unshift(Number(colorIndex));\n        if (\n          old.number.length >= 2 &&\n          old.max.length >= 2 &&\n          old.color.length >= 2\n        ) {\n          undoElement.style.visibility = \"visible\"; //履歴が2つ以上ならUndo機能を有効化\n        }\n        historyBody.scroll(\n          0,\n          historyBody.scrollHeight - historyBody.clientHeight //履歴表示エリアを下までスクロール\n        );\n        getHistoryLength();\n        removeDisableSet();\n      }\n    }, 300);\n  }\n};\nfunction resize() {\n  //レイアウトの調整\n  var numberElement = document.getElementById(\"bingoNumber\");\n  var wrapElement = document.getElementById(\"number-wrap\");\n  var historyElement = document.getElementById(\"history-body\"); //要素を変数に代入\n  if (wrapElement.clientHeight >= wrapElement.clientWidth) {\n    numberElement.style.width = \"90%\";\n    numberElement.style.height = numberElement.offsetWidth + \"px\"; //数字を表示するエリアを正方形に\n  } else {\n    numberElement.style.height = \"90%\";\n    numberElement.style.width = numberElement.offsetHeight + \"px\";\n  }\n  numberElement.style.fontSize = (numberElement.offsetHeight / 5) * 3 + \"px\"; //数字表示エリアのフォントサイズを指定\n  numberElement.style.borderWidth = numberElement.offsetHeight * 0.1 + \"px\"; //数字表示エリアの枠線の太さを指定\n  if (window.innerWidth <= 576) {\n    historyElement.style.fontSize =\n      ((historyElement.clientWidth * 0.12) / 3) * 2 + \"px\";\n  } else {\n    historyElement.style.fontSize =\n      ((historyElement.clientWidth * 0.09) / 3) * 2 + \"px\";\n  }\n  document.getElementById(\"privacy-iframe-wrap\").style.width =\n    document.getElementById(\"privacyModalBody\").clientWidth - 40 + \"px\";\n  document.getElementById(\"privacy-iframe-wrap\").style.height =\n    document.getElementById(\"privacyModalBody\").clientHeight - 40 + \"px\";\n}\nfunction addSelect() {\n  select = []; //ビンゴの数字の候補\n  /*==========\n  select(ビンゴの数字の候補を保存するリスト)=max(最大値)までのすべての数-myHistory(履歴)\n  for文を用いて、1からmax(設定した最大値)までの数字が履歴に含まれているかを確認。\n  もし、履歴に含まれていなければselectに追加。\n  この処理に時間がかからないよう、max(最大値)は99までに制限している。\n  ==========*/\n  localStorage.setItem(\"max\", max);\n  for (let i = 0; i < max; i++) {\n    if (myHistory.indexOf(i + 1) === -1 && select.indexOf(i + 1) === -1) {\n      select.push(i + 1);\n    }\n  }\n}\nfunction makeDisable(element) {\n  //指定した要素(element)を選択不可にする\n  document.getElementById(element).setAttribute(\"disabled\", null);\n}\nfunction makeDisableSet() {\n  //「指定した要素(element)を選択不可にする」処理を、楽ちんなセットにしました。\n  makeDisable(\"spin\");\n  makeDisable(\"reset\");\n  makeDisable(\"bingoMax\");\n  makeDisable(\"bingoMaxText\");\n}\nfunction removeDisable(element) {\n  //指定した要素(element)を選択可能にする\n  document.getElementById(element).removeAttribute(\"disabled\");\n}\nfunction removeDisableSet() {\n  //「指定した要素(element)を選択可能にする」処理を、うれしいセットにしました。\n  removeDisable(\"spin\");\n  removeDisable(\"reset\");\n  removeDisable(\"bingoMax\");\n  removeDisable(\"bingoMaxText\");\n  document.getElementById(\"spin\").focus();\n}\nconst resetAsk = () => {\n  //履歴をリセットしてもいいか、尋ねる\n  new (_node_modules_bootstrap_js_dist_modal__WEBPACK_IMPORTED_MODULE_1___default())(document.getElementById(\"reset-modal\")).show();\n};\nconst reset = () => {\n  //履歴のリセット処理\n  document.getElementById(\"undo\").style.visibility = \"hidden\";\n  document.getElementById(\"startOver\").style.visibility = \"hidden\"; //Undo機能を無効化\n  //リセット\n  makeDisableSet(); //フッターを選択不可にする\n  localStorage.removeItem(\"myHistory\");\n  localStorage.removeItem(\"lastColor\"); //LocalStorageから、履歴と数字表示エリアの枠線色を削除\n  document.getElementById(\"number-inner\").innerHTML = null; //数字表示エリアを空に\n  document.getElementById(\"history-body\").innerHTML = null; //履歴表示エリアを空に\n  document.getElementById(\"bingoNumber\").style.borderColor = colorList[0]; //数字表示エリアの枠線色を初期値に\n  /*変数のリセット*/\n  myHistory = [];\n  select = [];\n  old = new Object();\n  old.max = [];\n  old.number = [];\n  old.color = [];\n  addSelect(); //ビンゴの数字候補を更新\n  getHistoryLength(); //履歴の数を取得し、HTMLに出力\n  removeDisableSet(); //フッターを選択可能にする\n};\nfunction storageAvailable(type) {\n  //localStorageが利用可能かチェック(引用:https://developer.mozilla.org/ja/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#testing_for_availability)\n  var storage;\n  try {\n    storage = window[type];\n    var x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e instanceof DOMException &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\nfunction flex() {\n  /*スマホのURLバーに隠されないように、body部分の高さを調整*/\n  var height = window.innerHeight;\n  document.getElementsByClassName(\"fixed\")[0].style.height = height + \"px\";\n  document.body.style.height = height + \"px\";\n}\nvar checkedTimeout;\nconst copy = () => {\n  /*URLコピー*/\n  clearTimeout(checkedTimeout);\n  var url = location.href;\n  navigator.clipboard.writeText(url);\n  document.getElementById(\"checked-icon\").style.display = \"inline\";\n  document.getElementById(\"url-icon\").style.display = \"none\"; //チェックアイコンを表示\n  checkedTimeout = setTimeout(() => {\n    /*10秒後、元に戻す*/\n    document.getElementById(\"checked-icon\").style.display = \"none\";\n    document.getElementById(\"url-icon\").style.display = \"inline\";\n  }, 10000);\n};\nif (\"serviceWorker\" in navigator) {\n  /*Service Worker登録\n  (引用:https://developers.google.com/web/fundamentals/primers/service-workers)*/\n  window.addEventListener(\"load\", function () {\n    navigator.serviceWorker.register(\"sw.js\").then(\n      function (registration) {\n        // Registration was successful\n        console.log(\n          \"ServiceWorker registration successful with scope: \",\n          registration.scope\n        );\n      },\n      function (err) {\n        // registration failed :(\n        console.log(\"ServiceWorker registration failed: \", err);\n      }\n    );\n  });\n}\nconst undo = () => {\n  /*Undo処理　ビンゴを1ターン戻す*/\n  var numberElements = document.getElementsByClassName(\"history-number\"); //要素を変数に代入\n  var removeNumber = numberElements[numberElements.length - 1]; //消去する数をセット\n  removeNumber.remove(); //履歴表示エリアから削除\n  myHistory.splice(myHistory.indexOf(removeNumber.innerHTML), 1); //履歴のリストからも削除\n  /*1個前の数字・枠線色を反映*/\n  document.getElementById(\"number-inner\").innerHTML = old.number[1];\n  document.getElementById(\"bingoNumber\").style.borderColor =\n    colorList[old.color[1]];\n  max = old.max[1];\n  /*以前の最大値をレンジ/テキストボックスにセット*/\n  document.getElementById(\"bingoMax\").value = max;\n  document.getElementById(\"bingoMaxText\").value = max;\n  addSelect();\n  /*LocalStorageに保存*/\n  localStorage.setItem(\"myHistory\", JSON.stringify(myHistory));\n  localStorage.setItem(\"max\", old.max[1]);\n  localStorage.setItem(\"lastColor\", old.color[1]);\n  document.getElementById(\"undo\").style.visibility = \"hidden\";\n  document.getElementById(\"startOver\").style.visibility = \"visible\"; //ボタン切り替え\n  getHistoryLength(); //履歴の数を取得し、HTMLに出力\n  document.getElementById(\"spin\").focus(); //Spinボタンにフォーカス\n};\nconst startOver = () => {\n  var historyBody = document.getElementById(\"history-body\"); //要素を変数にセット\n  /*もともとの数をHTMLに出力*/\n  var div = document.createElement(\"div\");\n  var oldNumber = old.number[0];\n  div.className = \"history-number\";\n  div.innerHTML = oldNumber;\n  historyBody.appendChild(div);\n  /*HTMLに出力*/\n  document.getElementById(\"number-inner\").innerHTML = oldNumber;\n  document.getElementById(\"bingoNumber\").style.borderColor =\n    colorList[old.color[0]];\n  max = old.max[0]; //最大値を変数にセット\n  /*新しい最大値をレンジ/テキストボックスにセット*/\n  document.getElementById(\"bingoMax\").value = max;\n  document.getElementById(\"bingoMaxText\").value = max;\n  myHistory.push(oldNumber); //履歴リストに新しい数字を追加\n  addSelect();\n  /*LocalStorageに保存*/\n  localStorage.setItem(\"myHistory\", JSON.stringify(myHistory));\n  localStorage.setItem(\"max\", old.max[0]);\n  localStorage.setItem(\"lastColor\", old.color[0]);\n  document.getElementById(\"undo\").style.visibility = \"visible\";\n  document.getElementById(\"startOver\").style.visibility = \"hidden\"; //ボタン切り替え\n  getHistoryLength(); //履歴の数を取得し、HTMLに出力\n  document.getElementById(\"spin\").focus(); //Spinボタンにフォーカス\n};\nfunction getHistoryLength() {\n  //履歴の数を取得し、HTMLに出力\n  document.getElementById(\"historyLength\").innerText = myHistory.length;\n}\ndocument.getElementById(\"privacy\").addEventListener(\"shown.bs.modal\", () => {\n  let iframeElement = document.getElementById(\"privacy-iframe\").contentWindow;\n  iframeElement.location.href = \"https://r-40021.github.io/privacy.html\";\n  resize(); //レイアウト調整処理\n});\nconst toggleTheme = (mql) => {\n  clearInterval(anime); //1秒後にbodyのトランジョン解除のタイマーを解除\n  document.body.classList.add(\"anime\"); //bodyのトランジョンを有効化\n  let auto = document.getElementById(\"auto\"); //「システムに従う」ボタン\n  let light = document.getElementById(\"light\"); //「ライトモード」ボタン\n  let dark = document.getElementById(\"dark\"); //「ダークモード」ボタン\n  if (themeStatus) {\n    // ユーザーがボタンを押した(2回目以降)\n    if (mql === \"d\") {\n      // 「ダークモード」選択時\n      document.body.classList.add(\"dark\"); //ダークモードにする\n      changeIcon(\"dark\"); //フッターのアイコンを変更\n      noActive();\n      dark.classList.add(\"active\"); //選択中のボタンを目立たせる\n      localStorage.setItem(\"theme\", \"dark\"); //Local Storageに保存\n    } else if (mql === \"l\") {\n      // 「ライトモード」選択時\n      document.body.classList.remove(\"dark\"); //ダークモード解除\n      changeIcon(\"light\"); //フッターのアイコンを変更\n      noActive();\n      light.classList.add(\"active\"); //選択中のボタンを目立たせる\n      localStorage.setItem(\"theme\", \"light\"); //Local Storageに保存\n    } else if (mql === \"a\") {\n      // 「システムに任せる」選択時\n      if (isDark.matches) {\n        /* ダークテーマの時 */\n        document.body.classList.add(\"dark\"); //ダークモードにする\n        changeIcon(\"dark\"); //フッターのアイコンを変更\n        localStorage.setItem(\"theme\", \"auto\"); //Local Storageに保存\n      } else {\n        /* ライトテーマの時 */\n        document.body.classList.remove(\"dark\");\n        changeIcon(\"light\");\n        localStorage.setItem(\"theme\", \"auto\"); //Local Storageに保存\n      }\n      noActive();\n      auto.classList.add(\"active\"); //選択中のボタンを目立たせる\n    }\n  } else {\n    /*現時点でオート設定の時*/\n    if ((isDark.matches || mql === \"d\") && mql !== \"l\") {\n      /* ダークテーマの時 */\n      document.body.classList.add(\"dark\"); //ダークモードにする\n      changeIcon(\"dark\"); //フッターのアイコンを変更\n      if (mql === \"d\") {\n        noActive();\n        dark.classList.add(\"active\"); //選択中のボタンを目立たせる\n        localStorage.setItem(\"theme\", \"dark\"); //Local Storageに保存\n      } else {\n        localStorage.setItem(\"theme\", \"auto\"); //Local Storageに保存\n      }\n    } else {\n      /* ライトテーマの時 */\n      document.body.classList.remove(\"dark\"); //ダークモード解除\n      changeIcon(\"light\"); //フッターのアイコンを変更\n      if (mql === \"l\") {\n        noActive();\n        light.classList.add(\"active\"); //選択中のボタンを目立たせる\n        localStorage.setItem(\"theme\", \"light\"); //Local Storageに保存\n      } else {\n        localStorage.setItem(\"theme\", \"auto\"); //Local Storageに保存\n      }\n    }\n  }\n  if (mql === \"d\" || mql === \"l\") {\n    themeStatus = 1; //手動でダークorライト\n  } else if (mql === \"a\") {\n    themeStatus = 0; //システムに従うを選択時\n  }\n  anime = setInterval(() => {\n    document.body.classList.remove(\"anime\");\n  }, 1000); //1秒後、bodyのトランジョンを解除\n  function changeIcon(type) {\n    let elementsList = document.getElementsByClassName(\"themeIcon\");\n    let classList = [\"bi-sun\", \"bi-moon-fill\"];\n    if (type === \"dark\") {\n      for (let i = 0; i < elementsList.length; i++) {\n        const element = elementsList[i];\n        element.classList.replace(classList[0], classList[1]);\n      }\n    } else {\n      for (let i = 0; i < elementsList.length; i++) {\n        const element = elementsList[i];\n        element.classList.replace(classList[1], classList[0]);\n      }\n    }\n  }\n};\nfunction noActive() {\n  //すべてのボタンを非アクティブにする\n  let list = document.querySelectorAll(\"#theme .list-group-item\");\n  list.forEach(function (element) {\n    element.classList.remove(\"active\");\n  });\n}\n/*Global Functions*/\nwindow.glSpin = spin;\nwindow.glResetAsk = resetAsk;\nwindow.glReset = reset;\nwindow.glCopy = copy;\nwindow.glUndo = undo;\nwindow.glRedo = startOver;\nwindow.glTheme = toggleTheme;\ntry {\n  //システムのテーマが変更されたときに発動\n  // Chrome & Firefox\n  isDark.addEventListener(\"change\", toggleTheme);\n} catch (e1) {\n  try {\n    // Safari\n    isDark.addListener(toggleTheme);\n  } catch (e2) {\n    console.error(e2);\n  }\n}\n\n//# sourceURL=webpack://bingo/./src/js/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/index.js");
/******/ 	
/******/ })()
;